{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TLCN\\\\138_instructor_account_history_and_payouts\\\\client\\\\pages\\\\instructor\\\\course\\\\edit\\\\[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport InstructorRoute from \"../../../../components/routes/InstructorRoute\";\nimport CourseCreateForm from \"../../../../components/forms/CourseCreateForm\";\nimport Resizer from \"react-image-file-resizer\";\nimport { toast } from \"react-toastify\";\nimport { useRouter } from \"next/router\";\nimport { List, Avatar, Modal } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport UpdateLessonForm from \"../../../../components/forms/UpdateLessonForm\";\nconst {\n  Item\n} = List;\n\nconst CourseEdit = () => {\n  // state\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: \"\",\n    description: \"\",\n    price: \"9.99\",\n    uploading: false,\n    paid: true,\n    category: \"\",\n    loading: false,\n    lessons: []\n  });\n  const {\n    0: image,\n    1: setImage\n  } = useState({});\n  const {\n    0: preview,\n    1: setPreview\n  } = useState(\"\");\n  const {\n    0: uploadButtonText,\n    1: setUploadButtonText\n  } = useState(\"Upload Image\"); // state for lessons update\n\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: current,\n    1: setCurrent\n  } = useState({});\n  const {\n    0: uploadVideoButtonText,\n    1: setUploadVideoButtonText\n  } = useState(\"Upload Video\");\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    0: uploading,\n    1: setUploading\n  } = useState(false); // router\n\n  const router = useRouter();\n  const {\n    slug\n  } = router.query;\n  useEffect(() => {\n    loadCourse();\n  }, [slug]);\n\n  const loadCourse = async () => {\n    const {\n      data\n    } = await axios.get(`/api/course/${slug}`);\n    console.log(data);\n    if (data) setValues(data);\n    if (data && data.image) setImage(data.image);\n  };\n\n  const handleChange = e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleImage = e => {\n    let file = e.target.files[0];\n    setPreview(window.URL.createObjectURL(file));\n    setUploadButtonText(file.name);\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    })); // resize\n\n    Resizer.imageFileResizer(file, 720, 500, \"JPEG\", 100, 0, async uri => {\n      try {\n        let {\n          data\n        } = await axios.post(\"/api/course/upload-image\", {\n          image: uri\n        });\n        console.log(\"IMAGE UPLOADED\", data); // set image in the state\n\n        setImage(data);\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          loading: false\n        }));\n      } catch (err) {\n        console.log(err);\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          loading: false\n        }));\n        toast(\"Image upload failed. Try later.\");\n      }\n    });\n  };\n\n  const handleImageRemove = async () => {\n    try {\n      // console.log(values);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: true\n      }));\n      const res = await axios.post(\"/api/course/remove-image\", {\n        image\n      });\n      setImage({});\n      setPreview(\"\");\n      setUploadButtonText(\"Upload Image\");\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n    } catch (err) {\n      console.log(err);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n      toast(\"Image upload failed. Try later.\");\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // console.log(values);\n      const {\n        data\n      } = await axios.put(`/api/course/${slug}`, _objectSpread(_objectSpread({}, values), {}, {\n        image\n      }));\n      toast(\"Course updated!\"); // router.push(\"/instructor\");\n    } catch (err) {\n      toast(err.response.data);\n    }\n  };\n\n  const handleDrag = (e, index) => {\n    // console.log(\"ON DRAG => \", index);\n    e.dataTransfer.setData(\"itemIndex\", index);\n  };\n\n  const handleDrop = async (e, index) => {\n    // console.log(\"ON DROP => \", index);\n    const movingItemIndex = e.dataTransfer.getData(\"itemIndex\");\n    const targetItemIndex = index;\n    let allLessons = values.lessons;\n    let movingItem = allLessons[movingItemIndex]; // clicked/dragged item to re-order\n\n    allLessons.splice(movingItemIndex, 1); // remove 1 item from the given index\n\n    allLessons.splice(targetItemIndex, 0, movingItem); // push item after target item index\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      lessons: [...allLessons]\n    })); // save the new lessons order in db\n\n    const {\n      data\n    } = await axios.put(`/api/course/${slug}`, _objectSpread(_objectSpread({}, values), {}, {\n      image\n    })); // console.log(\"LESSONS REARRANGED RES => \", data);\n\n    toast(\"Lessons rearranged successfully\");\n  };\n\n  const handleDelete = async index => {\n    const answer = window.confirm(\"Are you sure you want to delete?\");\n    if (!answer) return;\n    let allLessons = values.lessons;\n    const removed = allLessons.splice(index, 1); // console.log(\"removed\", removed[0]._id);\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      lessons: allLessons\n    })); // send request to server\n\n    const {\n      data\n    } = await axios.put(`/api/course/${slug}/${removed[0]._id}`);\n    console.log(\"LESSON DELETED =>\", data);\n  };\n  /**\n   * lesson update functions\n   */\n\n\n  const handleVideo = async e => {\n    // remove previous video\n    if (current.video && current.video.Location) {\n      const res = await axios.post(`/api/course/video-remove/${values.instructor._id}`, current.video);\n      console.log(\"REMOVED ===>\", res);\n    } // upload\n\n\n    const file = e.target.files[0];\n    setUploadVideoButtonText(file.name);\n    setUploading(true); // send video as form data\n\n    const videoData = new FormData();\n    videoData.append(\"video\", file);\n    videoData.append(\"courseId\", values._id); // save progress bar and send video as form data to backend\n\n    const {\n      data\n    } = await axios.post(`/api/course/video-upload/${values.instructor._id}`, videoData, {\n      onUploadProgress: e => setProgress(Math.round(100 * e.loaded / e.total))\n    });\n    console.log(data);\n    setCurrent(_objectSpread(_objectSpread({}, current), {}, {\n      video: data\n    }));\n    setUploading(false);\n  };\n\n  const handleUpdateLesson = async e => {\n    // console.log(\"handle update lesson\");\n    e.preventDefault();\n    const {\n      data\n    } = await axios.put(`/api/course/lesson/${slug}/${current._id}`, current);\n    setUploadVideoButtonText(\"Upload Video\");\n    setVisible(false); // update ui\n\n    if (data.ok) {\n      let arr = values.lessons;\n      const index = arr.findIndex(el => el._id === current._id);\n      arr[index] = current;\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        lessons: arr\n      }));\n      toast(\"Lesson updated\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(InstructorRoute, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"jumbotron text-center square\",\n      children: \"Update Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-3 pb-3\",\n      children: /*#__PURE__*/_jsxDEV(CourseCreateForm, {\n        handleSubmit: handleSubmit,\n        handleImageRemove: handleImageRemove,\n        handleImage: handleImage,\n        handleChange: handleChange,\n        values: values,\n        setValues: setValues,\n        preview: preview,\n        uploadButtonText: uploadButtonText,\n        editPage: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col lesson-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [values && values.lessons && values.lessons.length, \" Lessons\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          onDragOver: e => e.preventDefault(),\n          itemLayout: \"horizontal\",\n          dataSource: values && values.lessons,\n          renderItem: (item, index) => /*#__PURE__*/_jsxDEV(Item, {\n            draggable: true,\n            onDragStart: e => handleDrag(e, index),\n            onDrop: e => handleDrop(e, index),\n            children: [/*#__PURE__*/_jsxDEV(Item.Meta, {\n              onClick: () => {\n                setVisible(true);\n                setCurrent(item);\n              },\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 27\n              }, this),\n              title: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n              onClick: () => handleDelete(index),\n              className: \"text-danger float-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Update lesson\",\n      centered: true,\n      visible: visible,\n      onCancel: () => setVisible(false),\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(UpdateLessonForm, {\n        current: current,\n        setCurrent: setCurrent,\n        handleVideo: handleVideo,\n        handleUpdateLesson: handleUpdateLesson,\n        uploadVideoButtonText: uploadVideoButtonText,\n        progress: progress,\n        uploading: uploading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CourseEdit;","map":{"version":3,"sources":["D:/TLCN/138_instructor_account_history_and_payouts/client/pages/instructor/course/edit/[slug].js"],"names":["useState","useEffect","axios","InstructorRoute","CourseCreateForm","Resizer","toast","useRouter","List","Avatar","Modal","DeleteOutlined","UpdateLessonForm","Item","CourseEdit","values","setValues","name","description","price","uploading","paid","category","loading","lessons","image","setImage","preview","setPreview","uploadButtonText","setUploadButtonText","visible","setVisible","current","setCurrent","uploadVideoButtonText","setUploadVideoButtonText","progress","setProgress","setUploading","router","slug","query","loadCourse","data","get","console","log","handleChange","e","target","value","handleImage","file","files","window","URL","createObjectURL","imageFileResizer","uri","post","err","handleImageRemove","res","handleSubmit","preventDefault","put","response","handleDrag","index","dataTransfer","setData","handleDrop","movingItemIndex","getData","targetItemIndex","allLessons","movingItem","splice","handleDelete","answer","confirm","removed","_id","handleVideo","video","Location","instructor","videoData","FormData","append","onUploadProgress","Math","round","loaded","total","handleUpdateLesson","ok","arr","findIndex","el","length","item","title"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,+CAA5B;AACA,OAAOC,gBAAP,MAA6B,+CAA7B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,gBAAP,MAA6B,+CAA7B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWL,IAAjB;;AAEA,MAAMM,UAAU,GAAG,MAAM;AACvB;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBhB,QAAQ,CAAC;AACnCiB,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,WAAW,EAAE,EAFsB;AAGnCC,IAAAA,KAAK,EAAE,MAH4B;AAInCC,IAAAA,SAAS,EAAE,KAJwB;AAKnCC,IAAAA,IAAI,EAAE,IAL6B;AAMnCC,IAAAA,QAAQ,EAAE,EANyB;AAOnCC,IAAAA,OAAO,EAAE,KAP0B;AAQnCC,IAAAA,OAAO,EAAE;AAR0B,GAAD,CAApC;AAUA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoB1B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAAC2B,OAAD;AAAA,OAAUC;AAAV,MAAwB5B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAAC6B,gBAAD;AAAA,OAAmBC;AAAnB,MAA0C9B,QAAQ,CAAC,cAAD,CAAxD,CAduB,CAgBvB;;AACA,QAAM;AAAA,OAAC+B,OAAD;AAAA,OAAUC;AAAV,MAAwBhC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACiC,OAAD;AAAA,OAAUC;AAAV,MAAwBlC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACmC,qBAAD;AAAA,OAAwBC;AAAxB,MAAoDpC,QAAQ,CAChE,cADgE,CAAlE;AAGA,QAAM;AAAA,OAACqC,QAAD;AAAA,OAAWC;AAAX,MAA0BtC,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACoB,SAAD;AAAA,OAAYmB;AAAZ,MAA4BvC,QAAQ,CAAC,KAAD,CAA1C,CAvBuB,CAyBvB;;AACA,QAAMwC,MAAM,GAAGjC,SAAS,EAAxB;AACA,QAAM;AAAEkC,IAAAA;AAAF,MAAWD,MAAM,CAACE,KAAxB;AAEAzC,EAAAA,SAAS,CAAC,MAAM;AACd0C,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACF,IAAD,CAFM,CAAT;;AAIA,QAAME,UAAU,GAAG,YAAY;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAM1C,KAAK,CAAC2C,GAAN,CAAW,eAAcJ,IAAK,EAA9B,CAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAIA,IAAJ,EAAU5B,SAAS,CAAC4B,IAAD,CAAT;AACV,QAAIA,IAAI,IAAIA,IAAI,CAACnB,KAAjB,EAAwBC,QAAQ,CAACkB,IAAI,CAACnB,KAAN,CAAR;AACzB,GALD;;AAOA,QAAMuB,YAAY,GAAIC,CAAD,IAAO;AAC1BjC,IAAAA,SAAS,iCAAMD,MAAN;AAAc,OAACkC,CAAC,CAACC,MAAF,CAASjC,IAAV,GAAiBgC,CAAC,CAACC,MAAF,CAASC;AAAxC,OAAT;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAIH,CAAD,IAAO;AACzB,QAAII,IAAI,GAAGJ,CAAC,CAACC,MAAF,CAASI,KAAT,CAAe,CAAf,CAAX;AACA1B,IAAAA,UAAU,CAAC2B,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BJ,IAA3B,CAAD,CAAV;AACAvB,IAAAA,mBAAmB,CAACuB,IAAI,CAACpC,IAAN,CAAnB;AACAD,IAAAA,SAAS,iCAAMD,MAAN;AAAcQ,MAAAA,OAAO,EAAE;AAAvB,OAAT,CAJyB,CAKzB;;AACAlB,IAAAA,OAAO,CAACqD,gBAAR,CAAyBL,IAAzB,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,MAAzC,EAAiD,GAAjD,EAAsD,CAAtD,EAAyD,MAAOM,GAAP,IAAe;AACtE,UAAI;AACF,YAAI;AAAEf,UAAAA;AAAF,YAAW,MAAM1C,KAAK,CAAC0D,IAAN,CAAW,0BAAX,EAAuC;AAC1DnC,UAAAA,KAAK,EAAEkC;AADmD,SAAvC,CAArB;AAGAb,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,IAA9B,EAJE,CAKF;;AACAlB,QAAAA,QAAQ,CAACkB,IAAD,CAAR;AACA5B,QAAAA,SAAS,iCAAMD,MAAN;AAAcQ,UAAAA,OAAO,EAAE;AAAvB,WAAT;AACD,OARD,CAQE,OAAOsC,GAAP,EAAY;AACZf,QAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACA7C,QAAAA,SAAS,iCAAMD,MAAN;AAAcQ,UAAAA,OAAO,EAAE;AAAvB,WAAT;AACAjB,QAAAA,KAAK,CAAC,iCAAD,CAAL;AACD;AACF,KAdD;AAeD,GArBD;;AAuBA,QAAMwD,iBAAiB,GAAG,YAAY;AACpC,QAAI;AACF;AACA9C,MAAAA,SAAS,iCAAMD,MAAN;AAAcQ,QAAAA,OAAO,EAAE;AAAvB,SAAT;AACA,YAAMwC,GAAG,GAAG,MAAM7D,KAAK,CAAC0D,IAAN,CAAW,0BAAX,EAAuC;AAAEnC,QAAAA;AAAF,OAAvC,CAAlB;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,mBAAmB,CAAC,cAAD,CAAnB;AACAd,MAAAA,SAAS,iCAAMD,MAAN;AAAcQ,QAAAA,OAAO,EAAE;AAAvB,SAAT;AACD,KARD,CAQE,OAAOsC,GAAP,EAAY;AACZf,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACA7C,MAAAA,SAAS,iCAAMD,MAAN;AAAcQ,QAAAA,OAAO,EAAE;AAAvB,SAAT;AACAjB,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACD;AACF,GAdD;;AAgBA,QAAM0D,YAAY,GAAG,MAAOf,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACgB,cAAF;;AACA,QAAI;AACF;AACA,YAAM;AAAErB,QAAAA;AAAF,UAAW,MAAM1C,KAAK,CAACgE,GAAN,CAAW,eAAczB,IAAK,EAA9B,kCAClB1B,MADkB;AAErBU,QAAAA;AAFqB,SAAvB;AAIAnB,MAAAA,KAAK,CAAC,iBAAD,CAAL,CANE,CAOF;AACD,KARD,CAQE,OAAOuD,GAAP,EAAY;AACZvD,MAAAA,KAAK,CAACuD,GAAG,CAACM,QAAJ,CAAavB,IAAd,CAAL;AACD;AACF,GAbD;;AAeA,QAAMwB,UAAU,GAAG,CAACnB,CAAD,EAAIoB,KAAJ,KAAc;AAC/B;AACApB,IAAAA,CAAC,CAACqB,YAAF,CAAeC,OAAf,CAAuB,WAAvB,EAAoCF,KAApC;AACD,GAHD;;AAKA,QAAMG,UAAU,GAAG,OAAOvB,CAAP,EAAUoB,KAAV,KAAoB;AACrC;AAEA,UAAMI,eAAe,GAAGxB,CAAC,CAACqB,YAAF,CAAeI,OAAf,CAAuB,WAAvB,CAAxB;AACA,UAAMC,eAAe,GAAGN,KAAxB;AACA,QAAIO,UAAU,GAAG7D,MAAM,CAACS,OAAxB;AAEA,QAAIqD,UAAU,GAAGD,UAAU,CAACH,eAAD,CAA3B,CAPqC,CAOS;;AAC9CG,IAAAA,UAAU,CAACE,MAAX,CAAkBL,eAAlB,EAAmC,CAAnC,EARqC,CAQE;;AACvCG,IAAAA,UAAU,CAACE,MAAX,CAAkBH,eAAlB,EAAmC,CAAnC,EAAsCE,UAAtC,EATqC,CASc;;AAEnD7D,IAAAA,SAAS,iCAAMD,MAAN;AAAcS,MAAAA,OAAO,EAAE,CAAC,GAAGoD,UAAJ;AAAvB,OAAT,CAXqC,CAYrC;;AACA,UAAM;AAAEhC,MAAAA;AAAF,QAAW,MAAM1C,KAAK,CAACgE,GAAN,CAAW,eAAczB,IAAK,EAA9B,kCAClB1B,MADkB;AAErBU,MAAAA;AAFqB,OAAvB,CAbqC,CAiBrC;;AACAnB,IAAAA,KAAK,CAAC,iCAAD,CAAL;AACD,GAnBD;;AAqBA,QAAMyE,YAAY,GAAG,MAAOV,KAAP,IAAiB;AACpC,UAAMW,MAAM,GAAGzB,MAAM,CAAC0B,OAAP,CAAe,kCAAf,CAAf;AACA,QAAI,CAACD,MAAL,EAAa;AACb,QAAIJ,UAAU,GAAG7D,MAAM,CAACS,OAAxB;AACA,UAAM0D,OAAO,GAAGN,UAAU,CAACE,MAAX,CAAkBT,KAAlB,EAAyB,CAAzB,CAAhB,CAJoC,CAKpC;;AACArD,IAAAA,SAAS,iCAAMD,MAAN;AAAcS,MAAAA,OAAO,EAAEoD;AAAvB,OAAT,CANoC,CAOpC;;AACA,UAAM;AAAEhC,MAAAA;AAAF,QAAW,MAAM1C,KAAK,CAACgE,GAAN,CAAW,eAAczB,IAAK,IAAGyC,OAAO,CAAC,CAAD,CAAP,CAAWC,GAAI,EAAhD,CAAvB;AACArC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,IAAjC;AACD,GAVD;AAYA;AACF;AACA;;;AAEE,QAAMwC,WAAW,GAAG,MAAOnC,CAAP,IAAa;AAC/B;AACA,QAAIhB,OAAO,CAACoD,KAAR,IAAiBpD,OAAO,CAACoD,KAAR,CAAcC,QAAnC,EAA6C;AAC3C,YAAMvB,GAAG,GAAG,MAAM7D,KAAK,CAAC0D,IAAN,CACf,4BAA2B7C,MAAM,CAACwE,UAAP,CAAkBJ,GAAI,EADlC,EAEhBlD,OAAO,CAACoD,KAFQ,CAAlB;AAIAvC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BgB,GAA5B;AACD,KAR8B,CAS/B;;;AACA,UAAMV,IAAI,GAAGJ,CAAC,CAACC,MAAF,CAASI,KAAT,CAAe,CAAf,CAAb;AACAlB,IAAAA,wBAAwB,CAACiB,IAAI,CAACpC,IAAN,CAAxB;AACAsB,IAAAA,YAAY,CAAC,IAAD,CAAZ,CAZ+B,CAa/B;;AACA,UAAMiD,SAAS,GAAG,IAAIC,QAAJ,EAAlB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0BrC,IAA1B;AACAmC,IAAAA,SAAS,CAACE,MAAV,CAAiB,UAAjB,EAA6B3E,MAAM,CAACoE,GAApC,EAhB+B,CAiB/B;;AACA,UAAM;AAAEvC,MAAAA;AAAF,QAAW,MAAM1C,KAAK,CAAC0D,IAAN,CACpB,4BAA2B7C,MAAM,CAACwE,UAAP,CAAkBJ,GAAI,EAD7B,EAErBK,SAFqB,EAGrB;AACEG,MAAAA,gBAAgB,EAAG1C,CAAD,IAChBX,WAAW,CAACsD,IAAI,CAACC,KAAL,CAAY,MAAM5C,CAAC,CAAC6C,MAAT,GAAmB7C,CAAC,CAAC8C,KAAhC,CAAD;AAFf,KAHqB,CAAvB;AAQAjD,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAV,IAAAA,UAAU,iCAAMD,OAAN;AAAeoD,MAAAA,KAAK,EAAEzC;AAAtB,OAAV;AACAL,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA7BD;;AA+BA,QAAMyD,kBAAkB,GAAG,MAAO/C,CAAP,IAAa;AACtC;AACAA,IAAAA,CAAC,CAACgB,cAAF;AACA,UAAM;AAAErB,MAAAA;AAAF,QAAW,MAAM1C,KAAK,CAACgE,GAAN,CACpB,sBAAqBzB,IAAK,IAAGR,OAAO,CAACkD,GAAI,EADrB,EAErBlD,OAFqB,CAAvB;AAIAG,IAAAA,wBAAwB,CAAC,cAAD,CAAxB;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV,CARsC,CAStC;;AACA,QAAIY,IAAI,CAACqD,EAAT,EAAa;AACX,UAAIC,GAAG,GAAGnF,MAAM,CAACS,OAAjB;AACA,YAAM6C,KAAK,GAAG6B,GAAG,CAACC,SAAJ,CAAeC,EAAD,IAAQA,EAAE,CAACjB,GAAH,KAAWlD,OAAO,CAACkD,GAAzC,CAAd;AACAe,MAAAA,GAAG,CAAC7B,KAAD,CAAH,GAAapC,OAAb;AACAjB,MAAAA,SAAS,iCAAMD,MAAN;AAAcS,QAAAA,OAAO,EAAE0E;AAAvB,SAAT;AACA5F,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;AACF,GAjBD;;AAmBA,sBACE,QAAC,eAAD;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,YAAY,EAAE0D,YADhB;AAEE,QAAA,iBAAiB,EAAEF,iBAFrB;AAGE,QAAA,WAAW,EAAEV,WAHf;AAIE,QAAA,YAAY,EAAEJ,YAJhB;AAKE,QAAA,MAAM,EAAEjC,MALV;AAME,QAAA,SAAS,EAAEC,SANb;AAOE,QAAA,OAAO,EAAEW,OAPX;AAQE,QAAA,gBAAgB,EAAEE,gBARpB;AASE,QAAA,QAAQ,EAAE;AATZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAoBE;AAAA;AAAA;AAAA;AAAA,YApBF,eAsBE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAA,qBAAKd,MAAM,IAAIA,MAAM,CAACS,OAAjB,IAA4BT,MAAM,CAACS,OAAP,CAAe6E,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AACE,UAAA,UAAU,EAAGpD,CAAD,IAAOA,CAAC,CAACgB,cAAF,EADrB;AAEE,UAAA,UAAU,EAAC,YAFb;AAGE,UAAA,UAAU,EAAElD,MAAM,IAAIA,MAAM,CAACS,OAH/B;AAIE,UAAA,UAAU,EAAE,CAAC8E,IAAD,EAAOjC,KAAP,kBACV,QAAC,IAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,WAAW,EAAGpB,CAAD,IAAOmB,UAAU,CAACnB,CAAD,EAAIoB,KAAJ,CAFhC;AAGE,YAAA,MAAM,EAAGpB,CAAD,IAAOuB,UAAU,CAACvB,CAAD,EAAIoB,KAAJ,CAH3B;AAAA,oCAKE,QAAC,IAAD,CAAM,IAAN;AACE,cAAA,OAAO,EAAE,MAAM;AACbrC,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,gBAAAA,UAAU,CAACoE,IAAD,CAAV;AACD,eAJH;AAKE,cAAA,MAAM,eAAE,QAAC,MAAD;AAAA,0BAASjC,KAAK,GAAG;AAAjB;AAAA;AAAA;AAAA;AAAA,sBALV;AAME,cAAA,KAAK,EAAEiC,IAAI,CAACC;AANd;AAAA;AAAA;AAAA;AAAA,oBALF,eAcE,QAAC,cAAD;AACE,cAAA,OAAO,EAAE,MAAMxB,YAAY,CAACV,KAAD,CAD7B;AAEE,cAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtBF,eAsDE,QAAC,KAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,OAAO,EAAEtC,OAHX;AAIE,MAAA,QAAQ,EAAE,MAAMC,UAAU,CAAC,KAAD,CAJ5B;AAKE,MAAA,MAAM,EAAE,IALV;AAAA,6BAOE,QAAC,gBAAD;AACE,QAAA,OAAO,EAAEC,OADX;AAEE,QAAA,UAAU,EAAEC,UAFd;AAGE,QAAA,WAAW,EAAEkD,WAHf;AAIE,QAAA,kBAAkB,EAAEY,kBAJtB;AAKE,QAAA,qBAAqB,EAAE7D,qBALzB;AAME,QAAA,QAAQ,EAAEE,QANZ;AAOE,QAAA,SAAS,EAAEjB;AAPb;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAtDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2ED,CAzQD;;AA2QA,eAAeN,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport InstructorRoute from \"../../../../components/routes/InstructorRoute\";\nimport CourseCreateForm from \"../../../../components/forms/CourseCreateForm\";\nimport Resizer from \"react-image-file-resizer\";\nimport { toast } from \"react-toastify\";\nimport { useRouter } from \"next/router\";\nimport { List, Avatar, Modal } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport UpdateLessonForm from \"../../../../components/forms/UpdateLessonForm\";\n\nconst { Item } = List;\n\nconst CourseEdit = () => {\n  // state\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"9.99\",\n    uploading: false,\n    paid: true,\n    category: \"\",\n    loading: false,\n    lessons: [],\n  });\n  const [image, setImage] = useState({});\n  const [preview, setPreview] = useState(\"\");\n  const [uploadButtonText, setUploadButtonText] = useState(\"Upload Image\");\n\n  // state for lessons update\n  const [visible, setVisible] = useState(false);\n  const [current, setCurrent] = useState({});\n  const [uploadVideoButtonText, setUploadVideoButtonText] = useState(\n    \"Upload Video\"\n  );\n  const [progress, setProgress] = useState(0);\n  const [uploading, setUploading] = useState(false);\n\n  // router\n  const router = useRouter();\n  const { slug } = router.query;\n\n  useEffect(() => {\n    loadCourse();\n  }, [slug]);\n\n  const loadCourse = async () => {\n    const { data } = await axios.get(`/api/course/${slug}`);\n    console.log(data);\n    if (data) setValues(data);\n    if (data && data.image) setImage(data.image);\n  };\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const handleImage = (e) => {\n    let file = e.target.files[0];\n    setPreview(window.URL.createObjectURL(file));\n    setUploadButtonText(file.name);\n    setValues({ ...values, loading: true });\n    // resize\n    Resizer.imageFileResizer(file, 720, 500, \"JPEG\", 100, 0, async (uri) => {\n      try {\n        let { data } = await axios.post(\"/api/course/upload-image\", {\n          image: uri,\n        });\n        console.log(\"IMAGE UPLOADED\", data);\n        // set image in the state\n        setImage(data);\n        setValues({ ...values, loading: false });\n      } catch (err) {\n        console.log(err);\n        setValues({ ...values, loading: false });\n        toast(\"Image upload failed. Try later.\");\n      }\n    });\n  };\n\n  const handleImageRemove = async () => {\n    try {\n      // console.log(values);\n      setValues({ ...values, loading: true });\n      const res = await axios.post(\"/api/course/remove-image\", { image });\n      setImage({});\n      setPreview(\"\");\n      setUploadButtonText(\"Upload Image\");\n      setValues({ ...values, loading: false });\n    } catch (err) {\n      console.log(err);\n      setValues({ ...values, loading: false });\n      toast(\"Image upload failed. Try later.\");\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // console.log(values);\n      const { data } = await axios.put(`/api/course/${slug}`, {\n        ...values,\n        image,\n      });\n      toast(\"Course updated!\");\n      // router.push(\"/instructor\");\n    } catch (err) {\n      toast(err.response.data);\n    }\n  };\n\n  const handleDrag = (e, index) => {\n    // console.log(\"ON DRAG => \", index);\n    e.dataTransfer.setData(\"itemIndex\", index);\n  };\n\n  const handleDrop = async (e, index) => {\n    // console.log(\"ON DROP => \", index);\n\n    const movingItemIndex = e.dataTransfer.getData(\"itemIndex\");\n    const targetItemIndex = index;\n    let allLessons = values.lessons;\n\n    let movingItem = allLessons[movingItemIndex]; // clicked/dragged item to re-order\n    allLessons.splice(movingItemIndex, 1); // remove 1 item from the given index\n    allLessons.splice(targetItemIndex, 0, movingItem); // push item after target item index\n\n    setValues({ ...values, lessons: [...allLessons] });\n    // save the new lessons order in db\n    const { data } = await axios.put(`/api/course/${slug}`, {\n      ...values,\n      image,\n    });\n    // console.log(\"LESSONS REARRANGED RES => \", data);\n    toast(\"Lessons rearranged successfully\");\n  };\n\n  const handleDelete = async (index) => {\n    const answer = window.confirm(\"Are you sure you want to delete?\");\n    if (!answer) return;\n    let allLessons = values.lessons;\n    const removed = allLessons.splice(index, 1);\n    // console.log(\"removed\", removed[0]._id);\n    setValues({ ...values, lessons: allLessons });\n    // send request to server\n    const { data } = await axios.put(`/api/course/${slug}/${removed[0]._id}`);\n    console.log(\"LESSON DELETED =>\", data);\n  };\n\n  /**\n   * lesson update functions\n   */\n\n  const handleVideo = async (e) => {\n    // remove previous video\n    if (current.video && current.video.Location) {\n      const res = await axios.post(\n        `/api/course/video-remove/${values.instructor._id}`,\n        current.video\n      );\n      console.log(\"REMOVED ===>\", res);\n    }\n    // upload\n    const file = e.target.files[0];\n    setUploadVideoButtonText(file.name);\n    setUploading(true);\n    // send video as form data\n    const videoData = new FormData();\n    videoData.append(\"video\", file);\n    videoData.append(\"courseId\", values._id);\n    // save progress bar and send video as form data to backend\n    const { data } = await axios.post(\n      `/api/course/video-upload/${values.instructor._id}`,\n      videoData,\n      {\n        onUploadProgress: (e) =>\n          setProgress(Math.round((100 * e.loaded) / e.total)),\n      }\n    );\n    console.log(data);\n    setCurrent({ ...current, video: data });\n    setUploading(false);\n  };\n\n  const handleUpdateLesson = async (e) => {\n    // console.log(\"handle update lesson\");\n    e.preventDefault();\n    const { data } = await axios.put(\n      `/api/course/lesson/${slug}/${current._id}`,\n      current\n    );\n    setUploadVideoButtonText(\"Upload Video\");\n    setVisible(false);\n    // update ui\n    if (data.ok) {\n      let arr = values.lessons;\n      const index = arr.findIndex((el) => el._id === current._id);\n      arr[index] = current;\n      setValues({ ...values, lessons: arr });\n      toast(\"Lesson updated\");\n    }\n  };\n\n  return (\n    <InstructorRoute>\n      <h1 className=\"jumbotron text-center square\">Update Course</h1>\n      {/* {JSON.stringify(values)} */}\n      <div className=\"pt-3 pb-3\">\n        <CourseCreateForm\n          handleSubmit={handleSubmit}\n          handleImageRemove={handleImageRemove}\n          handleImage={handleImage}\n          handleChange={handleChange}\n          values={values}\n          setValues={setValues}\n          preview={preview}\n          uploadButtonText={uploadButtonText}\n          editPage={true}\n        />\n      </div>\n      {/* <pre>{JSON.stringify(values, null, 4)}</pre>\n      <hr />\n      <pre>{JSON.stringify(image, null, 4)}</pre> */}\n\n      <hr />\n\n      <div className=\"row pb-5\">\n        <div className=\"col lesson-list\">\n          <h4>{values && values.lessons && values.lessons.length} Lessons</h4>\n          <List\n            onDragOver={(e) => e.preventDefault()}\n            itemLayout=\"horizontal\"\n            dataSource={values && values.lessons}\n            renderItem={(item, index) => (\n              <Item\n                draggable\n                onDragStart={(e) => handleDrag(e, index)}\n                onDrop={(e) => handleDrop(e, index)}\n              >\n                <Item.Meta\n                  onClick={() => {\n                    setVisible(true);\n                    setCurrent(item);\n                  }}\n                  avatar={<Avatar>{index + 1}</Avatar>}\n                  title={item.title}\n                ></Item.Meta>\n\n                <DeleteOutlined\n                  onClick={() => handleDelete(index)}\n                  className=\"text-danger float-right\"\n                />\n              </Item>\n            )}\n          ></List>\n        </div>\n      </div>\n\n      <Modal\n        title=\"Update lesson\"\n        centered\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        footer={null}\n      >\n        <UpdateLessonForm\n          current={current}\n          setCurrent={setCurrent}\n          handleVideo={handleVideo}\n          handleUpdateLesson={handleUpdateLesson}\n          uploadVideoButtonText={uploadVideoButtonText}\n          progress={progress}\n          uploading={uploading}\n        />\n        {/* <pre>{JSON.stringify(current, null, 4)}</pre> */}\n      </Modal>\n    </InstructorRoute>\n  );\n};\n\nexport default CourseEdit;\n"]},"metadata":{},"sourceType":"module"}